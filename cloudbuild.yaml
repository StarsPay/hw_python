substitutions:
  _REPOSITORY: 'us-central1-docker.pkg.dev/buoyant-notch-437915-p4/images'
  _IMAGE: '${_REPOSITORY}/hw_python'

# availableSecrets:
#   secretManager:
#   - versionName: projects/592977005222/secrets/passgithub/versions/latest
#     env: 'SSH_KEY'
#   - versionName: projects/592977005222/secrets/known_hosts/versions/latest
#     env: 'KNOWN_HOSTS'

# Access the id_rsa file from Secret Manager, and setup SSH
steps:
# - name: 'gcr.io/cloud-builders/git'
#   secretEnv: ['SSH_KEY', 'KNOWN_HOSTS']
#   entrypoint: 'bash'
#   args:
#   - -c
#   - |
#     echo "$$SSH_KEY" >> /root/.ssh/id_rsa
#     chmod 400 /root/.ssh/id_rsa
#     echo "$$KNOWN_HOSTS" >> /root/.ssh/known_hosts
#     chmod 400 /root/.ssh/known_hosts
#   volumes:
#   - name: 'ssh'
#     path: /root/.ssh

- name: 'us-central1-docker.pkg.dev/buoyant-notch-437915-p4/devops/gitwithgh:v1.0'
  entrypoint: 'bash'
  args:
  - -xc
  - |
    git clone git@github.com:$REPO_FULL_NAME.git repo
    cd repo
    git checkout $COMMIT_SHA
    if [ "$BRANCH_NAME" == "main" ]; then
      TAG_NAME="v1.0" # Aqui você pode definir o número da versão como desejar
    else
      TAG_NAME="snapshot-$(date +%Y%m%d%H%M%S)"
    fi
    git tag $$TAG_NAME
    git push origin $$TAG_NAME
  # volumes:
  # - name: 'ssh'
  #   path: /root/.ssh



  # 3. Constrói a imagem com a versão calculada e realiza o push
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t', '${_IMAGE}:${_VERSION}', '.']
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['push', '${_IMAGE}:${_VERSION}']

options:
  logging: CLOUD_LOGGING_ONLY